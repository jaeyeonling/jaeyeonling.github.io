(function(n){function e(e){for(var r,i,l=e[0],c=e[1],s=e[2],d=0,f=[];d<l.length;d++)i=l[d],o[i]&&f.push(o[i][0]),o[i]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(n[r]=c[r]);u&&u(e);while(f.length)f.shift()();return a.push.apply(a,s||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],r=!0,l=1;l<t.length;l++){var c=t[l];0!==o[c]&&(r=!1)}r&&(a.splice(e--,1),n=i(i.s=t[0]))}return n}var r={},o={app:0},a=[];function i(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.m=n,i.c=r,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)i.d(t,r,function(e){return n[e]}.bind(null,r));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/";var l=window["webpackJsonp"]=window["webpackJsonp"]||[],c=l.push.bind(l);l.push=e,l=l.slice();for(var s=0;s<l.length;s++)e(l[s]);var u=c;a.push([0,"chunk-vendors"]),t()})({0:function(n,e,t){n.exports=t("cd49")},"0d6d":function(n,e,t){},"525e":function(n,e,t){"use strict";var r=t("8bb3"),o=t.n(r);o.a},"8bb3":function(n,e,t){},cd49:function(n,e,t){"use strict";t.r(e);t("cadf"),t("551c"),t("097d");var r=t("2b0e"),o=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{attrs:{id:"app"}},[t("StyleEditor",{ref:"styleEditor",attrs:{code:n.currentStyle}}),t("ResumeEditor",{ref:"resumeEditor",attrs:{markdown:n.currentMarkdown,enableHtml:n.enableHtml}})],1)},a=[],i=t("795b"),l=t.n(i),c=(t("96cf"),t("3b8d")),s=t("d225"),u=t("b0b4"),d=t("308d"),f=t("6bb5"),h=t("4e2b"),p=t("9ab4"),g=t("60a3"),v="\n# 이력서\n\n## 김재연\n\n- +82 10-3336-1331\n\n- <jaeyeonling@gmail.com>\n \n- [Github](https://github.com/jaeyeonling)\n\n## 목표\n\n// TODO: \n\n---\n\n## 학습\n\n### 2019.11 ~ 2019.12 NEXTSTEP(우아한테크러닝) - DDD(Domain-Driven Design) 세레나데 1기\n\n* 교육 특징\n1. 레거시(Legacy)를 리팩터링\n> 데이터 중심의 레거시 프로젝트에 DDD를 도입하여 설계부터 코드 구현까지 점진적으로 리팩터링을 한다.\n\n2. GitHub 기반의 코드 리뷰 경험\n> 코드의 한 줄 한 줄에 대해 전문가가 자세한 리뷰를 제공해 준다.\n\n3. 트랜디한 개발 스킬\n> 많은 회사에서 우대하는 DDD에 대한 지식과 이벤트 스토밍부터 이벤트 소싱, CQRS까지 다양한 개발 스킬을 익힌다.\n\n### 2019.08 ~ 2019.09 NEXTSTEP - JWP - 라이브러리 & 프레임워크 구현 1기\n\n* 교육 특징\n1. HTTP 이해\n> 웹 애플리케이션 개발자가 반드시 학습해야 할 주제 중의 하나가 HTTP에 대한 이해이다. \n> HTTP 프로토콜 스펙을 책으로 학습하는 것은 재미없고 지루한 작업이다. \n> 웹 서버를 직접 구현함으로써 HTTP에 대한 이해도 높이고, 웹 서버의 동작 원리를 파악할 수 있다.\n\n2. 프레임워크 동작원리 이해\n> 대부분의 개발자는 프레임워크 사용법을 익히는데 많은 시간을 투자한다. \n> 프레임워크를 직접 구현함으로써 프레임워크의 내부 동작 원리에 대한 이해도와 문제 해결 역량을 높이고, 프레임워크를 확장하는 역량을 쌓을 수 있다.\n\n3. 나만의 라이브러리 만들기\n> 애플리케이션을 개발하다 보면 수많은 중복 코드를 만나게 된다. \n> 중복 코드를 제거해 나만의 라이브러리를 만듦으로써 구현 생산성을 높일 수 있다. \n> 라이브러리를 만드는 경험은 프로덕션 코드뿐만 아니라 테스트 코드의 중복을 제거하는데도 반드시 필요한 역량이다.\n\n### 2019.06 ~ 2019.07 NEXTSTEP - TDD, Refactoring, Clean Code 5기\n\n* 교육 특징\n1. 유지보수하기 좋은 코드 작성\n> 프로그래머 작업 중 가장 많은 시간을 투자하는 일이 유지보수이다. \n> 유지보수하기 좋은 코드를 구현하는 것은 서비스의 성패를 좌우하는 중요한 요소이다. \n> 유지보수하기 좋은 코드를 구현하는 핵심은 클린 코드 구현에 있다.\n\n2. 변화에 대응하는 핵심 능력\n> 운영 중 필연적으로 발생하기 마련인 기능 추가, 버그 수정, 레거시 코드 리뷰 및 수정 작업과 같은 변화 자체에 확장성있게 대응하려면 클린 코드에 대한 이해와 작성 능력이 필수. \n> 변화를 피할 수 없으면 제대로 대응하자.\n \n3. 프로젝트 협업 능력 향상\n> 읽기 좋은 클린 코드를 작성함으로서 오는 장점은 개인에게만 있지 않다. \n> 특히 1인 개발이 아닌, 여러 개발자가 함께 참여하는 프로젝트일수록 확장성 있는 코드 작성 능력을 가진 개발자의 기여도는 높을 수 밖에 없다.\n\n### 2016.07 ~ 2016.12 : 한국소프트웨어기술진흥협회 - 전자정부 Java Framework 개발자 과정 127기 \n\n---\n\n## 회사 경력 \n\n### 2017.10 ~ 2019.04 / 2019.09 ~ : 수퍼브 (재직 중)\n> 음악 게임과 캐주얼 게임, IP 게임을 개발하는 개발사이자 글로벌 퍼블리셔\n\n#### 수퍼브에서의 역할: DevOps 개발자\n- 기획자와 클라이언트팀과 커뮤니케이션하며 애플리케이션 레벨부터 인프라 레벨까지 구축 설계\n- 언어와 환경에 종속되지 않고, 요구에 맞춰 유연한 설계와 선택\n- AWS의 서비스를 이용하여 모니터링부터 운영까지 담당\n\n#### 프로젝트: 유미의 세포들\n\n##### 음악 게임 매출 1위인 게임 API 개발 (2018.02 ~ 2019.04)\n\n###### 프로젝트 소개\n- 네이버 웹툰 “유미의 세포들“ IP 기반의 캐주얼 리듬게임\n\n###### 개발 환경\n- Java12, Grizzly 2.x, Hibernate 5.3, Gradle 5.1, Aurora MySQL 2.x (MySQL 5.7), ElasticCache (Redis 4.x), AWS KDS(Kinesis Data Streams)\n\n###### 프로젝트 내용\n- API는 NIO 프레임워크인 Grizzly를 이용하여 만든 자체 프레임워크 베이스\n- Hibernate JPQL를 이용한 ORM\n    - Spring을 사용하지 않아 EntityManager를 직접 사용\n- JWT Token과 조회가 많은 정보는 Redis에 캐싱\n- Facebook, Naver 로그인\n    - OAuth API 이용\n- 유저 히스토리 로깅은 DB가 아닌 Kinesis Stream으로 수집 후 AWS Athena로 조회\n    - Server  -> Kinesis Data Firehose -> Lambda -> Glue Data Catalog -> S3 -> Athena\n- 게임 컨텐츠 개발\n    - 세포 관리, 가챠, 육성, 합성\n        - 세포는 게임의 모든 컨텐츠들과 연관되어 있음\n    - 일일미션, 도전미션\n    - 스토리 모드 / 랭킹 모드\n        - 메인 컨텐츠로 음악 플레이에 해당\n        - 부정 플레이 방지를 위해 플레이 시간, 점수 등의 검증 로직이 있음\n    - 소모임\n        - 길드와 비슷한 개념으로 채팅 기능이 있으며 Sendbird API 이용\n    - 쇼핑 / 드레스룸\n        - 옷 입히기 게임과 같은 요소\n        - 의상에 따른 버프 적용과 미션 클리어 여부가 달라지기 때문에 로직에 영향을 줌\n    - 많은 트래픽에 안전한 서비스를 만드는 것이 주요 포인트\n        - 버그를 100% 방지할 수 없기 때문에 빠르게 감지하기 위해 모니터링 셋팅\n        - AWS Cloud Watch에 커스텀 지표를 추가하여 다양한 알람 등록\n        - 갑작스러운 사용자 증가 시 대처로 Auto Scaling 설정\n    - *수퍼브에 입사하여 처음으로 출시한 프로젝트*\n        - 게임을 출시하는 기쁨부터 초기에 발생하는 버그를 잡는 힘든 과정까지 겪음\n\n##### Serverless Architecture 기반의 사전예약 페이지 API 개발 (2018.08 ~ 2018.09)\n\n###### 프로젝트 소개\n- 네이버 웹툰 “유미의 세포들“ IP 기반의 캐주얼 리듬게임 사전예약 페이지\n\n###### 개발 환경\n- Node.js 10.x, TypeScript, Serverless Framework, API Gateway, Lambda, Aurora MySQL 2.x (MySQL 5.7)\n\n###### 프로젝트 내용\n- 서버 비용을 최소화하고 관리 포인트를 줄이기 위해 Serverless Architecture를 구축\n- *추후 다른 이벤트에서도 최소한의 수정으로 사용할 수 있게 구조를 설계*\n    - Config 정보를 기준으로 Validation하고 DB에 Insert하게 개발\n\n#### 프로젝트: Pianista\n\n##### 글로벌 100만 다운로드 게임 API 컨텐츠 개발 및 유지보수 (2017.10 ~ 2019.04)\n\n###### 프로젝트 소개\n- 클래식 피아노 곡을 연주하는 건반형 리듬게임\n\n###### 개발 환경\n- Java12, Grizzly 2.x, Hibernate 5.3, Ant, Aurora MySQL 2.x (MySQL 5.7), ElasticCache (Redis 4.x), AWS KDS(Kinesis Data Streams)\n\n###### 프로젝트 내용\n- API는 NIO 프레임워크인 Grizzly를 이용하여 만든 자체 프레임워크 베이스\n- Hibernate JPQL를 이용한 ORM\n    - Spring을 사용하지 않아 EntityManager를 직접 사용\n- JWT Token과 조회가 많은 정보는 Redis에 캐싱\n- Facebook 로그인\n    - OAuth API 이용\n- 유저 히스토리 로깅은 DB가 아닌 Kinesis Stream으로 수집 후 AWS Athena로 조회\n    - Server  -> Kinesis Data Firehose -> Lambda -> Glue Data Catalog -> S3 -> Athena\n- 게임 컨텐츠 개발\n    - 멤버십 추가\n        - 멤버십 구독 시 게임 내 모든 곡 플레이 가능\n    - 리그모드 추가\n        - 리그 조 생성 후 10명 조원 편성 \n        - 리그모드로 게임한 점수 기준으로 랭킹을 매김\n        - 24시간 기준 점수로 1 ~ 3등까지 승급, 7 ~ 10등까지 강등\n\n##### 서버 1대 당 2,000 TPS 성능을 내는 게임 API 서버 개발 (2019.02 ~ 2019.04)\n\n###### 프로젝트 소개\n- 클래식 피아노 곡을 연주하는 건반형 리듬게임의 중국 버전\n\n###### 개발 환경\n- Golang 1.12, Gorm (ORM Framework), GraphQL, MySQL 8.0\n\n###### 프로젝트 내용\n- On-Premise 환경에서 1개의 인스턴스로 2,000TPS 이상의 퍼포먼스 보장\n- *퍼포먼스 향상을 위해 Golang과 GraphQL 도입을 어필하여 처음 도입*\n    - Thread보다 가벼운 Goroutine을 이용하여 퍼포먼스 향상\n    - Over-fetching, Under-fetching 방지\n    \n#### 프로젝트: GM Tool\n\n##### 추가개발 없이 게임 관리를 할 수 있는 툴 API 개발 (2017.12 ~ 2018.02)\n\n###### 프로젝트 소개\n- 일반적으로 게임을 개발하면 해당 게임 툴도 같이 만들게 되는데 반복되는 작업을 설정으로 처리하여 추가 개발 없이 새로운 게임을 추가 가능\n- 게임 운영자(GM)가 게임을 관리할 수 있도록 도와주는 게임 관리 툴 (게임 이벤트, 게임 설정 관리, 유저 관리, 데이터 관리, 데이터 조회, 로그 조회 등)\n\n###### 개발 환경\n- Java12, SpringBoot 2.0, Hibernate 5.3, Gradle 5.1, WebSocket, Aurora MySQL 2.x (MySQL 5.7), ElasticCache (Redis 4.x), Athena, SecretManager\n\n###### 프로젝트 내용\n- 2FA (2 Factor Auth)를 이용한 로그인\n- 여러 프로젝트, 여러 업체, 여러 팀, 분할된 권한을 구현하기 위해 ACL(Access Control List) 도입\n- 게임 추가 시 필요한 IAM, EC2 등 AWS 서비스를 AWS API를 이용하여 자동으로 생성\n- Excel로 게임 설정 정보를 올리면 검증 후 변환하여 Config 형태로 업로드\n    - 웹소켓을 이용하여 실시간 진행상황 모니터링 \n- 가상의 테이블을 만들어 여러 DB와 Athena의 정보들을 묶어서 보여줄 수 있음\n\n##### 서버 1대 당 2,000 TPS 성능을 내는 게임 API 서버 개발 (2019.02 ~ 2019.04)\n\n###### 프로젝트 소개\n- 클래식 피아노 곡을 연주하는 건반형 리듬게임의 중국 버전\n\n###### 개발 환경\n- Golang 1.12, Gorm (ORM Framework), GraphQL, MySQL 8.0\n\n###### 프로젝트 내용\n- On-Premise 환경에서 1개의 인스턴스로 2,000TPS 이상의 퍼포먼스 보장\n- *퍼포먼스 향상을 위해 Golang과 GraphQL 도입을 어필하여 처음 도입*\n    - Thread보다 가벼운 Goroutine을 이용하여 퍼포먼스 향상\n    - Over-fetching, Under-fetching 방지\n\n---\n\n### 2016.12 ~ 2017.09 : 슈어엠 (10개월)\n> 메시징 서비스와 카카오 비즈메시지(알림톡, 친구톡) 서비스\n\n#### 수퍼브에서의 역할: 메시지 발송 에이전트 / 메시징 서버 개발자\n- TCP / HTTP 환경 뿐 아니라 국제 메시징 프로토콜인 SMPP 등 여러 통신 환경 속에서 네트워크 프로그래밍 담당\n\n##### TCP를 이용한 SGI 서울보증 메시지 발송 시스템 개발 (2017.06 ~ 2017.07)\n\n###### 프로젝트 소개\n- 메시지를 발송하는 자바 라이브러리, 자바 라이브러리 요청을 받는 서버 구현\n- 클라이언트 기준 1,000 TPS를 목표\n\n###### 개발 환경\n- Java8, Node.js, TCP\n\n###### 프로젝트 내용\n- 1,000 TPS의 퍼포먼스를 달성하기 위해 TCP를 선택\n    - 빠른 개발을 위해 *LineDelimitedJSON*이라는 개념을 도입\n- 요구사항에 따라 발송 라이브러리는 자바로 개발\n    - Net 패키지를 이용한 TCP 통신\n    - javadoc을 이용한 API 문서 작성\n    - Thread Pool과 Queue를 이용한 동시처리 향상\n- TCP 서버는 언어 디자인 자체에서 Event Driven를 지원하는 Node.js로 개발\n    - 모든 클라이언트 요청에 쓰레드를 생성한다면 퍼포먼스 문제가 생길 수 있다고 판단\n        - 몇 개의 클라이언트가 연결될지 예측할 수 없었음\n        - 천개일 수도 있고 만개일 수도 있는 상황\n- *시스템 구조: TCP Client(User) -> TCP Server -> DB <-> Agent -> SureM API*\n\n##### SK CNC 기프티콘 발송 시스템 개발 (2017.04)\n\n###### 프로젝트 소개\n- 기존 메시지 발송 에이전트를 이용한 기프티콘을 발송 시스템\n- 기프티콘의 경우 SK 플래닛의 API를 사용\n- 기프티콘 정보로 QR코드 생성 후 상품 이미지와 합성하여 메시지로 발송\n\n###### 개발 환경\n- Java1.5, Node.js 0.10, MyBatis, Gradle, OracleDB, SQL Server\n\n###### 프로젝트 내용\n- 기프티콘 발송 에이전트 개발\n    - 기존 사내 에이전트에 기프티콘 발송 기능만 추가하여 커스터마이징\n    - 일정한 주기로 Table Polling하여 API Call\n- 기프티콘 전용 API 서버 개발\n    - 메시지 당 금액이 크기 때문에 예외처리에 대한 중요도가 높음\n    - 서비스 장애 시 복구할 수 있도록 모든 단계에 대한 상태를 DB에 남김\n    - DB 장애 시 File로 저장\n    - 서비스 정상화 시 수동으로 업데이트\n- *시스템 구조: User -> DB <-> Agent -> API -> DB <-> Agent -> Vendor*\n\n##### AWS 서비스를 이용한 Serverless 기반의 직방 메시지 시스템 개발 (2017.02 ~ 2017.03)\n\n###### 프로젝트 소개\n- AWS 서비스를 이용한 Serverless 기반의 메시징 시스템 구축\n\n###### 개발 환경\n- Java1.5, Spring 4.3.x, SpringBoot, MyBatis, Maven, jQuery\n- Node.js 4.x, API Gateway, Lambda, SQS, Mocha, SQL Server\n\n###### 프로젝트 내용\n- 장애를 최소화하기 위해 클라우드 도입\n- AWS에서 API Gateway, Lambda, SQS 등의 환경을 셋팅\n- SQS에서 메시지를 가져오는 Consumer 개발\n    - Consumer가 여러개로 늘어날 경우 API Call 횟수가 증가하는 문제 발생\n    - Reverse proxy에서 요청을 제어하여 불필요한 API Call 횟수 해결\n- API 테스트를 스케줄 등록 후 문제 발생 시 문자메시지 알림 시스템 개발\n- 메시지 취소, 예약, 이미지 등록, 통계 등을 하는 유틸 API를 개발\n- 메시지 관련된 정보 및 통계를 볼 수 있는 관리자 페이지를 개발\n- 시스템 구조: User -> API Gateway -> Lambda (Producer) -> SQS <-> Consumer -> DB <-> Agent -> Vendor\n\n---\n\n## 이외 활동\n\n### 2019.10 ~ 2019.11 NEXTSTEP - TDD, Refactoring, Clean Code 6기 리뷰어\n\n### 2019.09 ~ 2020.02 디프만(디자이너와 프로그래머가 만났을 때) 7기 \n",S=["\n  /**\n   * Inspired by http://strml.net/\n   * \n   * Hello, Jaeyeonling!\n   */\n\n  /** \n   * 스타일 에디터\n   * /\n\n  /* 모든 요소 전환 효과 추가 */\n  * {\n    transition: all .3s;\n  }\n\n  /* \n   * HTML 색상 \n   * 배경색은 IntelliJ 비슷하게\n   */\n  html {\n    color: rgb(222,222,222); \n    background: rgb(43,43,43);\n  }\n\n  /* 텍스트 위치 변경 */\n  .styleEditor {\n    padding: .5em;\n    border: 1px solid;\n    margin: .5em;\n    overflow: auto;\n    width: 45vw; \n    height: 90vh;\n  }\n\n  /* \n   * 코드 강조 표시 \n   * 이것 또한 IntelliJ 비슷하게\n   */\n  #style-container {\n    color: #DEDEDE \n  }\n  .token.comment {\n    color: #857F6B; \n    font-style: italic; \n  }\n  .token.selector {\n    color: #D7BA7D; \n  }\n  .token.keyword {\n    color: #569CD6; \n  }\n  .token.property {\n    color: #569CD6; \n  }\n  .token.function {\n    color: #C366A3; \n  }\n  .token.punctuation {\n    color: #FFCF00;\n  }\n\n  /* 3D 효과 추가 */\n  html {\n    perspective: 1000px;\n  }\n  .styleEditor {\n    position: fixed;\n    left: 0;\n    top: 0;\n    -webkit-transition: none;\n    transition: none;\n    -webkit-transform: rotateY(10deg) translateZ(-100px);\n    transform: rotateY(10deg) translateZ(-100px);\n  }\n\n  /* 텍스트 편집 설정 추가 */\n  .resumeEditor {\n    position: fixed;\n    right: 0;\n    top: 0;\n    padding: .5em;\n    margin: .5em;\n    width: 48vw;\n    height: 90vh;\n    border: 1px solid;\n    background: white;\n    color: #222;\n    overflow: auto;\n  }\n\n  ","\n  /**\n   * 텍스트 에디터\n   *\n   * Markdown 형식\n   * 간단한 오픈 소스 도구를 사용하여 HTML로 변환\n   * /\n   \n  p, li {\n    font-size: 0.8em;\n  }\n\n  @font-face {\n    font-family: octicons-link;\n  }\n"],b={fullMarkdown:v,fullStyle:S},y=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{ref:"container",staticClass:"resumeEditor",class:{htmlMode:n.enableHtml}},[n.enableHtml?t("div",{domProps:{innerHTML:n._s(n.result)}}):t("pre",[n._v(n._s(n.result))])])},m=[],P=t("0e54"),k=t.n(P),w=function(n){function e(){return Object(s["a"])(this,e),Object(d["a"])(this,Object(f["a"])(e).apply(this,arguments))}return Object(h["a"])(e,n),Object(u["a"])(e,[{key:"goBottom",value:function(){this.changeScrollTop(1e5)}},{key:"goTop",value:function(){this.changeScrollTop(0)}},{key:"changeScrollTop",value:function(n){this.$refs.container.scrollTop=n}},{key:"result",get:function(){return this.enableHtml?k()(this.markdown):this.markdown}}]),e}(g["c"]);p["a"]([Object(g["b"])()],w.prototype,"markdown",void 0),p["a"]([Object(g["b"])()],w.prototype,"enableHtml",void 0),w=p["a"]([g["a"]],w);var A=w,T=A,O=(t("e20e"),t("2877")),M=Object(O["a"])(T,y,m,!1,null,"45ea796e",null);M.options.__file="ResumeEditor.vue";var D=M.exports,j=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{ref:"container",staticClass:"styleEditor"},[t("div",{staticClass:"code",domProps:{innerHTML:n._s(n.codeInStyleTag)}}),t("pre",{domProps:{innerHTML:n._s(n.highlightedCode)}})])},C=[],x=t("c197"),E=t.n(x),I=function(n){function e(){return Object(s["a"])(this,e),Object(d["a"])(this,Object(f["a"])(e).apply(this,arguments))}return Object(h["a"])(e,n),Object(u["a"])(e,[{key:"goBottom",value:function(){this.changeScrollTop(1e5)}},{key:"goTop",value:function(){this.changeScrollTop(0)}},{key:"changeScrollTop",value:function(n){this.$refs.container.scrollTop=n}},{key:"highlightedCode",get:function(){return E.a.highlight(this.code,E.a.languages.css)}},{key:"codeInStyleTag",get:function(){return"<style>".concat(this.code,"</style>")}}]),e}(g["c"]);p["a"]([Object(g["b"])()],I.prototype,"code",void 0),I=p["a"]([g["a"]],I);var L=I,G=L,H=(t("525e"),Object(O["a"])(G,j,C,!1,null,"67732711",null));H.options.__file="StyleEditor.vue";var Q=H.exports,R=function(n){function e(){var n;return Object(s["a"])(this,e),n=Object(d["a"])(this,Object(f["a"])(e).apply(this,arguments)),n.interval=1,n.currentStyle="",n.enableHtml=!1,n.currentMarkdown="",n}return Object(h["a"])(e,n),Object(u["a"])(e,[{key:"created",value:function(){this.makeResume()}},{key:"makeResume",value:function(){var n=Object(c["a"])(regeneratorRuntime.mark(function n(){return regeneratorRuntime.wrap(function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,this.progressivelyShowStyle(0);case 2:return n.next=4,this.progressivelyShowResume();case 4:return n.next=6,this.progressivelyShowStyle(1);case 6:return n.next=8,this.showHtml();case 8:return n.next=10,this.progressivelyShowStyle(2);case 10:case"end":return n.stop()}},n,this)}));function e(){return n.apply(this,arguments)}return e}()},{key:"showHtml",value:function(){var n=this;return new l.a(function(e,t){return n.enableHtml=!0,e()})}},{key:"progressivelyShowStyle",value:function(n){var e=this;return new l.a(function(t,r){var o=e.interval,a=Object(c["a"])(regeneratorRuntime.mark(function r(){var i,l,c,s;return regeneratorRuntime.wrap(function(r){while(1)switch(r.prev=r.next){case 0:if(i=b.fullStyle[n],i){r.next=3;break}return r.abrupt("return");case 3:if(l=b.fullStyle.filter(function(e,t){return t<=n}).map(function(n){return n.length}).reduce(function(n,e){return n+e},0),c=l-i.length,!(e.currentStyle.length<l)){r.next=12;break}s=e.currentStyle.length-c,e.currentStyle+=i.substring(s,s+1)||" ","\n"===i.substring(s-1,s)&&e.$refs.styleEditor&&e.$nextTick(function(){return e.$refs.styleEditor.goBottom()}),setTimeout(a,o),r.next=13;break;case 12:return r.abrupt("return",t());case 13:case"end":return r.stop()}},r,this)})).bind(e);a()})}},{key:"progressivelyShowResume",value:function(){var n=this;return new l.a(function(e,t){var r=b.fullMarkdown.length,o=n.interval,a=function t(){if(!(n.currentMarkdown.length<r))return e();n.currentMarkdown=b.fullMarkdown.substring(0,n.currentMarkdown.length+5);n.currentMarkdown[n.currentMarkdown.length-1];var a=n.currentMarkdown[n.currentMarkdown.length-2];"\n"===a&&n.$refs.resumeEditor&&n.$nextTick(function(){return n.$refs.resumeEditor.goBottom()}),setTimeout(t,o)};a()})}}]),e}(g["c"]);R=p["a"]([Object(g["a"])({components:{StyleEditor:Q,ResumeEditor:D}})],R);var _=R,B=_,J=(t("fdc8"),Object(O["a"])(B,o,a,!1,null,"3f03bf3a",null));J.options.__file="App.vue";var N=J.exports,F=t("9483");Object(F["a"])("".concat("/","service-worker.js"),{ready:function(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered:function(){console.log("Service worker has been registered.")},cached:function(){console.log("Content has been cached for offline use.")},updatefound:function(){console.log("New content is downloading.")},updated:function(){console.log("New content is available; please refresh.")},offline:function(){console.log("No internet connection found. App is running in offline mode.")},error:function(n){console.error("Error during service worker registration:",n)}});document.documentElement.clientWidth;new r["default"]({render:function(n){return n(N)}}).$mount("#app")},e20e:function(n,e,t){"use strict";var r=t("0d6d"),o=t.n(r);o.a},fdc8:function(n,e,t){"use strict";var r=t("ffc2"),o=t.n(r);o.a},ffc2:function(n,e,t){}});
//# sourceMappingURL=app.a32440b3.js.map